name: 'Twitch CLI Action'
description: 'Runs the Twitch CLI'

inputs:
  mock_port:
    description: The port of the API Mock Server (beta)
    default: 8080
  mock_command:
    description: The command to execute after starting the API Mock Server (beta)
    default: ''
  events:
    description: Which Events to mock (EventSub) [Comma-seperated]
    default: ''
  events_endpoint:
    description: URL of the Endpoint, which shall accept the events
    default: ''
  events_command:
    description: The command to execute before mocking the events
    default: ''

runs:
  using: 'composite'
  steps:
# Linux & macOS
    - name: Install latest Twitch CLI
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      shell: bash
      run: brew install twitchdev/twitch/twitch-cli 
      
# Windows
    - name: Set Execution Policy Scoop
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
    - name: Install Scoop
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
    - name: Add to PATH
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
    - name: Add TwitchDev Bucket
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: scoop bucket add twitch https://github.com/twitchdev/scoop-bucket.git
    - name: Install latest Twitch CLI
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: scoop install twitch-cli
      
# Common
    - name: Run Mock Server
      shell: bash
      if: ${{ inputs.mock_command != '' }}
      env:
        ACTION_TWITCH_MOCK_PORT: ${{ inputs.mock_port }}
        ACTION_TWITCH_MOCK_COMMAND: ${{ inputs.mock_command }}
      run: chmod u+x $GITHUB_ACTION_PATH/mock.sh && $GITHUB_ACTION_PATH/mock.sh

    - name: Mock Events
      shell: bash
      if: ${{ inputs.events != '' && inputs.events_endpoint != '' && inputs.events_command != '' }}
      env:
        ACTION_TWITCH_EVENTS: ${{ inputs.events }}
        ACTION_TWITCH_EVENTS_ENDPOINT: ${{ inputs.events_endpoint }}
      run: chmod u+x $GITHUB_ACTION_PATH/events.sh && $GITHUB_ACTION_PATH/events.sh